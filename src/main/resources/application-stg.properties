spring.security.oauth2.resourceserver.jwt.issuer-uri    = ${JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri   = ${JWT_JWK_SET_URI}

spring.main.allow-bean-definition-overriding=true

## PostgreSQL
spring.datasource.hikari.connectionTimeout                              = 100000
spring.datasource.hikari.maximum-pool-size                              = 10
spring.datasource.hikari.minimum-idle                                   = 10
spring.datasource.hikari.data-source-properties.cachePrepStmts          = true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize       = 250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit   = 2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts      = true
spring.datasource.hikari.data-source-properties.useLocalSessionState    = true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements= true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata  = true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration= true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits     = true
spring.datasource.hikari.data-source-properties.maintainTimeStats       = false

#logging
logging.level.root = info
logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss.SSS} %5p --- [%15.15t] %-40.40logger{39} :: %X{correlationId} : %m%n%ex{full}

#spring.jpa.show-sql                                         = true
spring.jpa.properties.hibernate.format_sql                  = true
spring.datasource.url                                       = ${JDBC_URL}
spring.datasource.username                                  = ${JDBC_USER_NAME}
spring.datasource.password                                  = ${JDBC_PASSWORD}
spring.jpa.database-platform                                = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans   = true
#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=none
spring.flyway.baseline-on-migrate = true
spring.flyway.out-of-order=true


keycloak.realm                      = ${KEYCLOAK_REALM}
keycloak.auth-server-url            = ${KEYCLOAK_AUTH_SERVER_URL}
keycloak.ssl-required               = external
keycloak.resource                   = ${KEYCLOAK_RESOURCE}
keycloak.use-resource-role-mappings = true
keycloak.bearer-only                = true
keycloak.credentials.secret         = ${KEYCLOAK_SECRET}

## minio
minio.url                   = ${MINIO_URL}
minio.endpoint              = ${MINIO_ENDPOINT}
minio.port                  = 9000
minio.access.key            = ${MINIO_KEY}
minio.access.secret         = ${MINIO_SECRET}
minio.secure                = false
minio.bucket-name           = ${MINIO_BUCKET_NAME}
minio.image-size            = 10485760
minio.file-size             = 1073741824
minio.is.upload.file        = true

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USER}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable = true

##FPT Information.
fpt.website = ${FPT_WEBSITE}
fpt.hotline = ${FPT_HOTLINE}

clients.ekyc.name                               = ekyc
clients.ekyc.url                                = ${EKYC_URL}
clients.ekyc.transactionId.url                  = ${EKYC_TRANSACTION_ID_URL}
clients.ekyc.ocrIdentify.url                    = ${EKYC_OCR_IDENTIFY_URL}
clients.ekyc.verifyIdentify.url                 = ${EKYC_VERIFY_IDENTIFY_URL}

clients.ekyc.ocrTemplate.url                    = ${EKYC_OCR_TEMPLATE_URL}
clients.ekyc.checkSignature.url                 = ${EKYC_CHECK_SIGNATURE_URL}

clients.ekyc.signInSignature.url                = ${EKYC_CHECK_SIGNIN_SIGNATURE_URL}
clients.ekyc.signDigital.url                    = ${EKYC_CHECK_SIGN_DIGITAL_URL}
clients.ekyc.token                              = ${EKYC_TOKEN}
clients.ekyc.code                               = ${EKYC_CODE}
clients.ekyc.acceptLanguage                     = ${EKYC_ACCEPT_LANGUAGE}

url.save.pdf =

domain.server=${DOMAIN_SERVER}
